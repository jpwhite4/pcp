#! /bin/sh
# PCP QA Test No. 465
# pmdumplog -s
#
# Copyright (c) 2014 Red Hat.
# Copyright (c) 1995-2002 Silicon Graphics, Inc.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

rm -f $seq.out
if [ $PCP_VER -ge 30811 ]
then
    ln $seq.out.4 $seq.out
    echo "[Version for PCP 3.8.11 or later]"
elif [ $PCP_VER -ge 30810 ]
then
    ln $seq.out.3 $seq.out
    echo "[Version for PCP 3.8.10 or later]"
elif [ $PCP_VER -gt 20100 -o $PCP_EOE_VER -ge 60510 ]
then
    echo "[Version for PCP 2.2 or later or IRIX >= 6.5.10]"
    ln $seq.out.2 $seq.out
elif [ $PCP_VER -le 20100 -o \
     \( $PCP_EOE_VER -ge 60500 -a $PCP_EOE_VER -le 60509 \) ]
then
    echo "[Version for PCP prior to 2.2 or IRIX <= 6.5.9]"
    ln $seq.out.1 $seq.out
else
    echo "Test not suitable for PCP ($PCP_VER) and PCP_EOE ($PCP_EOE_VER)" >$seq.notrun
    echo "$seq: [not run] `cat $seq.notrun`"
    exit 0
fi

status=1	# failure is the default!
trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15

# real QA test starts here
cat <<End-of-File | pmlogger -Dappl1 -l $tmp.log -T 1sec $tmp
log mandatory on once {
    sample.control
}
log mandatory on once {
    sample.long.one
}
log mandatory on once {
    sample.float.one
}
log mandatory on once {
    sample.double.one
}
log mandatory on once {
    sample.string.null
}
log mandatory on once {
    sample.string.hullo
}
log mandatory on once {
    sample.bin
}
log mandatory on once {
    sample.control
    sample.long.one
    sample.float.one
    sample.double.one
    sample.string.null
    sample.string.hullo
    sample.bin
}
log mandatory on once {
    sample.string.hullo
}
log mandatory on once {
    sample.bin
}
End-of-File

pmdumplog -s $tmp 2>&1 \
| _filter_pmdumplog \
| sed -e '1,/pmcd.pmlogger.archive/d'

# success, all done
status=0
exit
